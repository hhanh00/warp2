// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

class NativeLibrary {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  NativeLibrary(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  NativeLibrary.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void dart_post_cobject(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _dart_post_cobject(
      ptr,
    );
  }

  late final _dart_post_cobject_ptr =
      _lookup<ffi.NativeFunction<_c_dart_post_cobject>>('dart_post_cobject');
  late final _dart_dart_post_cobject _dart_post_cobject =
      _dart_post_cobject_ptr.asFunction<_dart_dart_post_cobject>();

  int full_scan(
    ffi.Pointer<ffi.Int8> url,
    ffi.Pointer<ffi.Int8> fvk,
    int port,
  ) {
    return _full_scan(
      url,
      fvk,
      port,
    );
  }

  late final _full_scan_ptr =
      _lookup<ffi.NativeFunction<_c_full_scan>>('full_scan');
  late final _dart_full_scan _full_scan =
      _full_scan_ptr.asFunction<_dart_full_scan>();
}

const int DEPTH = 32;

typedef _c_dart_post_cobject = ffi.Void Function(
  ffi.Pointer<ffi.Void> ptr,
);

typedef _dart_dart_post_cobject = void Function(
  ffi.Pointer<ffi.Void> ptr,
);

typedef _c_full_scan = ffi.Uint64 Function(
  ffi.Pointer<ffi.Int8> url,
  ffi.Pointer<ffi.Int8> fvk,
  ffi.Int64 port,
);

typedef _dart_full_scan = int Function(
  ffi.Pointer<ffi.Int8> url,
  ffi.Pointer<ffi.Int8> fvk,
  int port,
);
